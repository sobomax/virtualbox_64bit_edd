<!--
    VirtualBox Windows Installation Script (WiX)

    Copyright (C) 2006-2014 Oracle Corporation

    This file is part of VirtualBox Open Source Edition (OSE), as
    available from http://www.virtualbox.org. This file is free software;
    you can redistribute it and/or modify it under the terms of the GNU
    General Public License (GPL) as published by the Free Software
    Foundation, in version 2 as it comes in the "COPYING" file of the
    VirtualBox OSE distribution. VirtualBox OSE is distributed in the
    hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
-->

<Include xmlns="http://schemas.microsoft.com/wix/2006/wi"
         xmlns:difxapp="http://schemas.microsoft.com/wix/DifxAppExtension">

<?if $(env.VBOX_WITH_DOCS_PACKING) = "yes" ?>
    <Directory Id="dir_VBoxAppDocuments" Name="doc">
        <!-- The documentation is a separate component. This allows to split the install process
             into pieces if ever necessary. Maintenance is easier, too. The following component
             will be installed in the "doc" folder -->
        <Component Id="cp_Docs" Guid="40BD12C5-89A8-4B81-8A5E-5EEE2C2763C4"
                   Win64="$(var.Property_Win64)">
            <?include $(env.PATH_TARGET)\Files_Doc.wxi ?>
        </Component>
    </Directory>
<?endif ?>
    <!-- Device driver directory -->
    <Directory Id="dir_VBoxAppDrivers" Name="drivers">
        <Directory Id="dir_VBoxAppVBoxDrv" Name="vboxdrv">
            <Component Id="cp_VBoxDrv" Guid="D3E2F2BB-569F-46A2-836C-BDF30FF1EDF8" Win64="$(var.Property_Win64)">
                <difxapp:Driver AddRemovePrograms="no" ForceInstall="yes"
                                Legacy="$(var.Property_DriverLegacy)" Sequence="2" PlugAndPlayPrompt="no"/>
                <File Id="file_VBoxDrv.sys" Name="VBoxDrv.sys" KeyPath="yes"
                      Source="$(env.PATH_OUT)\bin\VBoxDrv.sys"/>
                <File Id="file_VBoxDrv.inf" Name="VBoxDrv.inf"
                      Source="$(env.PATH_OUT)\bin\VBoxDrv.inf" />
<?if $(env.VBOX_SIGNING_MODE) != none ?>
                <File Id="file_VBoxDrv.cat" Name="VBoxDrv.cat"
                      Source="$(env.PATH_OUT)\bin\VBoxDrv.cat" />
<?endif ?>
            </Component>
        </Directory>
    </Directory> <!-- Directory "drivers" -->

<?if $(env.VBOX_WITH_QTGUI) = "yes" ?>
    <!-- National Language Support directory -->
    <Directory Id="dir_VBoxAppNLS" Name="nls">
        <Component Id="cp_NLS" Guid="D63517D7-1CF3-4D06-B3EE-C561E323069B" Win64="$(var.Property_Win64)">
            <!-- Include the autogenerated NLS file list -->
            <?include $(env.PATH_TARGET)\VBoxGuiNLS.wxi ?>
        </Component>
    </Directory>
<?endif ?>

    <!-- COM components have a separate entry mainly because of the KeyPath attribute (that hints the
         TypeLib element where to take the TLB resource from) may appear only once per component -->
    <Component Id="cp_MainCOM" Guid="CD4A3C6C-C2D5-428D-90A1-B6DA3D0777D6" Win64="$(var.Property_Win64)">

        <!-- Note: This file ID *must not* be changed because of our typelib template generation file! -->
        <File Id="VBoxSVC" Name="VBoxSVC.exe"
              Source="$(env.PATH_OUT)\bin\VBoxSVC.exe">
        </File>

        <!-- We set KeyPath on this file to instruct TypeLib to read the TLB resource from it
             and create appropriate Interface registry entries. Note that the same TLB is present
             in VBoxSVC.exe - it's just a matter of choice which one to use -->
        <!-- Note: This file ID *must not* be changed because of our typelib template generation file! -->
        <File Id="VBoxC" Name="VBoxC.dll"
              Source="$(env.PATH_OUT)\bin\VBoxC.dll" KeyPath="yes">
        </File>

        <!-- Include the auto-generated TypeLib block -->
        <?include $(env.PATH_TARGET)\VirtualBox_TypeLib.wxi ?>

    </Component>

    <!--

    <Component Id="cp_StartMenuShortcut" Guid="1C137D24-E599-47BD-98D0-2F62F202A8EA" Win64="$(var.Property_Win64)">
        <RegistryValue Root="HKCU" Key="$(var.Property_RegKeyInstall)" Type="string"
                       Value="installed" KeyPath="yes" />
        <Shortcut Id="ShortcutStartMenuVBox" Directory="ProgramMenuDir"
                  Name="VirtualBox" WorkingDirectory="INSTALLDIR" Advertise="no" Target="VirtualBox.exe" />
        <RemoveFolder Id="ShortcutStartMenuVBoxRemove" On="uninstall" />
    </Component>-->

    <!---->

<?if $(env.VBOX_WITH_QTGUI) = "yes" ?>
    <Component Id="cp_RegisterExtensions" Guid="FEB8943E-5D60-4E2D-846F-458207019D40"
               Win64="$(var.Property_Win64)" KeyPath="yes">
        <Condition>VBOX_REGISTERFILEEXTENSIONS</Condition>
        <!-- Register file extensions. Note: Extension IDs *must not* be changed! These specify the actual
             file extension to handle. Also, here would be the place to add more fancy DDE stuff later.
             Important: The IDs in "IconIndex" *must* be matching "Resources\resource.h" -->
        <ProgId Id="progId_VirtualBox.Shell.vbox" Description="VirtualBox Machine Definition" Icon="file_VBoxRes.dll" IconIndex="-201">
            <Extension Id="vbox" ContentType="application/x-virtualbox-vbox">
                <Verb Id="open" Command="Open" TargetFile="file_VirtualBox.exe" Argument="&quot;%1&quot;" />
            </Extension>
        </ProgId>
        <ProgId Id="progId_VirtualBox.Shell.vbox-extpack" Description="VirtualBox Extension Pack" Icon="file_VBoxRes.dll" IconIndex="-202">
            <Extension Id="vbox-extpack" ContentType="application/x-virtualbox-vbox-extpack">
                <Verb Id="open" Command="Open" TargetFile="file_VirtualBox.exe" Argument="&quot;%1&quot;" />
            </Extension>
        </ProgId>
        <ProgId Id="progId_VirtualBox.Shell.ovf" Description="Open Virtualization Format" Icon="file_VBoxRes.dll" IconIndex="-301">
            <Extension Id="ovf" ContentType="application/x-virtualbox-ovf">
                <Verb Id="open" Command="Open" TargetFile="file_VirtualBox.exe" Argument="&quot;%1&quot;" />
            </Extension>
        </ProgId>
        <ProgId Id="progId_VirtualBox.Shell.ova" Description="Open Virtualization Format Archive" Icon="file_VBoxRes.dll" IconIndex="-302">
            <Extension Id="ova" ContentType="application/x-virtualbox-ova">
                <Verb Id="open" Command="Open" TargetFile="file_VirtualBox.exe" Argument="&quot;%1&quot;" />
            </Extension>
        </ProgId>
        <ProgId Id="progId_VirtualBox.Shell.vdi" Description="Virtual Disk Image" Icon="file_VBoxRes.dll" IconIndex="-303">
            <Extension Id="vdi" ContentType="application/x-virtualbox-vdi" />
        </ProgId>
        <ProgId Id="progId_VirtualBox.Shell.vmdk" Description="Virtual Machine Disk Format" Icon="file_VBoxRes.dll" IconIndex="-304">
            <Extension Id="vmdk" ContentType="application/x-virtualbox-vmdk" />
        </ProgId>
        <ProgId Id="progId_VirtualBox.Shell.vhd" Description="Virtual Hard Disk" Icon="file_VBoxRes.dll" IconIndex="-305">
            <Extension Id="vhd" ContentType="application/x-virtualbox-vhd" />
        </ProgId>
        <ProgId Id="progId_VirtualBox.Shell.hdd" Description="Virtual Hard Disk" Icon="file_VBoxRes.dll" IconIndex="-306">
            <Extension Id="hdd" ContentType="application/x-virtualbox-hdd" />
        </ProgId>
    </Component> <!-- cp_RegisterExtensions -->
<?endif ?>

    <!-- All Binaries, DLLs (except COM) and drivers are in one component because they belong together. Additional
         binaries e.g. test tools, utilities etc. should be in another component so they"re clearly separated -->
    <Component Id="cp_MainBinaries" Guid="5C8FE57A-F744-4DE0-AA3F-A563F486AD98" Win64="$(var.Property_Win64)">

        <!-- Set required environment variables -->
        <Environment Id="env_VBoxInstallDir" Action="set" Name="VBOX_MSI_INSTALL_PATH"
                     System="yes" Part="last" Permanent="no" Value="[msm_VBoxApplicationFolder]" />

        <!-- Files -->
<?if $(env.VBOX_WITH_DOCS_PACKING) = "yes" ?>
        <!-- Include all user manual .CHM files (file is generated by makefile) -->
        <?include $(env.PATH_TARGET)\Files_Main.wxi ?>
<?endif ?>
        <!-- Include all license files (file is generated by makefile) -->
        <?include $(env.PATH_TARGET)\Files_License.wxi ?>

        <!-- Frontends -->
        <File Id="file_VBoxManage.exe" Name="VBoxManage.exe"
              Source="$(env.PATH_OUT)\bin\VBoxManage.exe" />
        <File Id="file_VBoxHeadless.exe" Name="VBoxHeadless.exe"
              Source="$(env.PATH_OUT)\bin\VBoxHeadless.exe">
            <!-- Create a simple shortcut for VBoxVRDP, which is not present anymore, pointing to VBoxHeadless.exe -->
       <!--     <Shortcut Id="ShortcutVBoxVRDP" Directory="INSTALLDIR" Name="VBoxVRDP" Show="normal" WorkingDirectory="INSTALLDIR"/> -->
        </File>
<?if $(env.VBOX_WITH_HARDENING) = "yes" ?>
        <File Id="file_VBoxHeadless.dll" Name="VBoxHeadless.dll"
              Source="$(env.PATH_OUT)\bin\VBoxHeadless.dll">
        </File>
<?endif ?>
        <File Id="file_VBoxBalloonCtrl.exe" Name="VBoxBalloonCtrl.exe"
              Source="$(env.PATH_OUT)\bin\VBoxBalloonCtrl.exe"/>

        <!-- Misc tools -->
        <File Id="file_VBoxNetDHCP.exe" Name="VBoxNetDHCP.exe"
              Source="$(env.PATH_OUT)\bin\VBoxNetDHCP.exe"/>
<?if $(env.VBOX_WITH_HARDENING) = "yes" ?>
        <File Id="file_VBoxNetDHCP.dll" Name="VBoxNetDHCP.dll"
              Source="$(env.PATH_OUT)\bin\VBoxNetDHCP.dll">
        </File>
<?endif ?>
        <File Id="file_VBoxNetNAT.exe" Name="VBoxNetNAT.exe"
              Source="$(env.PATH_OUT)\bin\VBoxNetNAT.exe"/>
<?if $(env.VBOX_WITH_HARDENING) = "yes" ?>
        <File Id="file_VBoxNetNAT.dll" Name="VBoxNetNAT.dll"
              Source="$(env.PATH_OUT)\bin\VBoxNetNAT.dll">
        </File>
<?endif ?>
<?if $(env.VBOX_WITH_EXTPACK) = "yes" ?>
        <File Id="file_VBoxExtPackHelperApp.exe" Name="VBoxExtPackHelperApp.exe"
              Source="$(env.PATH_OUT)\bin\VBoxExtPackHelperApp.exe"/>
<?endif ?>
        <!-- VBox DLL files -->
        <File Id="file_VBoxDD.dll" Name="VBoxDD.dll"
              Source="$(env.PATH_OUT)\bin\VBoxDD.dll" />
        <File Id="file_VBoxDD2.dll" Name="VBoxDD2.dll"
              Source="$(env.PATH_OUT)\bin\VBoxDD2.dll" />
        <File Id="file_VBoxDDU.dll" Name="VBoxDDU.dll"
              Source="$(env.PATH_OUT)\bin\VBoxDDU.dll" />
        <File Id="file_VBoxRT.dll" Name="VBoxRT.dll"
              Source="$(env.PATH_OUT)\bin\VBoxRT.dll" />
        <File Id="file_VBoxREM.dll" Name="VBoxREM.dll"
              Source="$(env.PATH_OUT)\bin\VBoxREM.dll" />
<?if $(env.BUILD_TARGET_ARCH) = "x86" ?>
        <File Id="file_VBoxREM32.dll" Name="VBoxREM32.dll"
              Source="$(env.PATH_OUT)\bin\VBoxREM32.dll" />
        <File Id="file_VBoxREM64.dll" Name="VBoxREM64.dll"
              Source="$(env.PATH_OUT)\bin\VBoxREM64.dll" />
<?endif ?>
        <File Id="file_VBoxSupLib.dll" Name="VBoxSupLib.dll"
              Source="$(env.PATH_OUT)\bin\VBoxSupLib.dll" />
        <File Id="file_VBoxVMM.dll" Name="VBoxVMM.dll"
              Source="$(env.PATH_OUT)\bin\VBoxVMM.dll" />
<?if $(env.VBOX_WITH_VRDP) = "yes" ?>
        <File Id="file_VBoxVRDP.dll" Name="VBoxVRDP.dll"
              Source="$(env.PATH_OUT)\bin\VBoxVRDP.dll" />
<?endif ?>
        <File Id="file_VBoxSharedFolders.dll" Name="VBoxSharedFolders.dll"
              Source="$(env.PATH_OUT)\bin\VBoxSharedFolders.dll" />
        <File Id="file_VBoxSharedClipboard.dll" Name="VBoxSharedClipboard.dll"
              Source="$(env.PATH_OUT)\bin\VBoxSharedClipboard.dll" />
<?if $(env.VBOX_WITH_DRAG_AND_DROP)= "yes" ?>
        <File Id="file_VBoxDragAndDropSvc.dll" Name="VBoxDragAndDropSvc.dll"
              Source="$(env.PATH_OUT)\bin\VBoxDragAndDropSvc.dll" />
<?endif ?>
<?if $(env.VBOX_WITH_GUEST_PROPS) = "yes" ?>
        <File Id="file_VBoxGuestPropSvc.dll" Name="VBoxGuestPropSvc.dll"
              Source="$(env.PATH_OUT)\bin\VBoxGuestPropSvc.dll" />
<?endif ?>
<?if $(env.VBOX_WITH_GUEST_CONTROL) = "yes" ?>
        <File Id="file_VBoxGuestControlSvc.dll" Name="VBoxGuestControlSvc.dll"
              Source="$(env.PATH_OUT)\bin\VBoxGuestControlSvc.dll" />
<?endif ?>
        <File Id="file_VBoxHostChannel.dll" Name="VBoxHostChannel.dll"
              Source="$(env.PATH_OUT)\bin\VBoxHostChannel.dll" />
        <File Id="file_VBoxAuth.dll" Name="VBoxAuth.dll"
              Source="$(env.PATH_OUT)\bin\VBoxAuth.dll" />
        <File Id="file_VBoxAuthSimple.dll" Name="VBoxAuthSimple.dll"
              Source="$(env.PATH_OUT)\bin\VBoxAuthSimple.dll" />

        <!-- Include resource DLL (icons, ...) -->
        <File Id="file_VBoxRes.dll" Name="VBoxRes.dll"
              Source="$(env.PATH_OUT)\bin\VBoxRes.dll" />

        <File Id="file_VMMGC.gc" Name="VMMGC.gc"
              Source="$(env.PATH_OUT)\bin\VMMGC.gc" />
        <File Id="file_VBoxDDGC.gc" Name="VBoxDDGC.gc"
              Source="$(env.PATH_OUT)\bin\VBoxDDGC.gc" />
        <File Id="file_VBoxDD2GC.gc" Name="VBoxDD2GC.gc"
              Source="$(env.PATH_OUT)\bin\VBoxDD2GC.gc" />

        <File Id="file_VMMR0.r0" Name="VMMR0.r0"
              Source="$(env.PATH_OUT)\bin\VMMR0.r0" />
        <File Id="file_VBoxDDR0.r0" Name="VBoxDDR0.r0"
              Source="$(env.PATH_OUT)\bin\VBoxDDR0.r0" />
        <File Id="file_VBoxDD2R0.r0" Name="VBoxDD2R0.r0"
              Source="$(env.PATH_OUT)\bin\VBoxDD2R0.r0" />

<?if $(env.VBOX_WITH_CROGL) = "yes" ?>
        <File Id="file_VBoxTestOGL.exe" Name="VBoxTestOGL.exe"
              Source="$(env.PATH_OUT)\bin\VBoxTestOGL.exe" />
<?endif ?>
<?if $(env.VBOX_WITH_QTGUI) = "yes" ?>
        <!-- Qt frontend -->
        <File Id="file_VirtualBox.exe" Name="VirtualBox.exe"
              Source="$(env.PATH_OUT)\bin\VirtualBox.exe">
        </File>
    <?if $(env.VBOX_WITH_HARDENING) = "yes" ?>
        <File Id="file_VirtualBox.dll" Name="VirtualBox.dll"
              Source="$(env.PATH_OUT)\bin\VirtualBox.dll">
        </File>
    <?endif ?>
        <File Id="file_QtCoreVBox4.dll" Name="QtCoreVBox4.dll"
              Source="$(env.PATH_OUT)\bin\QtCoreVBox4.dll" />
        <File Id="file_QtGuiVBox4.dll" Name="QtGuiVBox4.dll"
              Source="$(env.PATH_OUT)\bin\QtGuiVBox4.dll" />
        <File Id="file_QtNetworkVBox4.dll" Name="QtNetworkVBox4.dll"
              Source="$(env.PATH_OUT)\bin\QtNetworkVBox4.dll" />
<?endif ?>
<?if $(env.VBOX_WITH_DEBUGGER_GUI) = "yes" ?>
        <File Id="file_VBoxDbg.dll" Name="VBoxDbg.dll"
              Source="$(env.PATH_OUT)\bin\VBoxDbg.dll" />
<?endif ?>
<?if $(env.VBOX_GUI_USE_QGL) = "yes" ?>
        <File Id="file_QtOpenGLVBox4.dll" Name="QtOpenGLVBox4.dll"
              Source="$(env.PATH_OUT)\bin\QtOpenGLVBox4.dll" />
<?endif?>

<?if $(env.VBOX_VCC_TOOL_STEM) = "VCC100" ?>
        <!-- MS C/C++ v10.0 Runtime DLL files -->
        <File Id="file_msvcr100.dll" Name="msvcr100.dll"
              Source="$(env.PATH_OUT)\bin\msvcr100.dll" />
        <File Id="file_msvcp100.dll" Name="msvcp100.dll"
              Source="$(env.PATH_OUT)\bin\msvcp100.dll" />
<?endif?>
<?if $(env.VBOX_VCC_TOOL_STEM) = "VCC110" ?>
        <!-- MS C/C++ v11.0 Runtime DLL files -->
        <File Id="file_msvcr110.dll" Name="msvcr110.dll"
              Source="$(env.PATH_OUT)\bin\msvcr110.dll" />
        <File Id="file_msvcp110.dll" Name="msvcp110.dll"
              Source="$(env.PATH_OUT)\bin\msvcp110.dll" />
<?endif?>

        <!-- EFI firmware -->
<?if $(env.VBOX_WITH_EFIFW_PACKING) = "yes" ?>
        <File Id="file_VBoxEFI32.fd" Name="VBoxEFI32.fd" DiskId="$(var.Property_DiskIdCommon)"
              Source="$(env.PATH_OUT)\bin\VBoxEFI32.fd" />
        <File Id="file_VBoxEFI64.fd" Name="VBoxEFI64.fd" DiskId="$(var.Property_DiskIdCommon)"
              Source="$(env.PATH_OUT)\bin\VBoxEFI64.fd" />
<?endif?>
        <!-- VBox guest additions -->
<?if $(env.VBOX_WITH_ADDITIONS_PACKING) = "yes" ?>
    <?if $(env.VBOX_WITH_COMBINED_PACKAGE) = "yes" ?>
            <File Id="file_VBoxGuestAdditions.iso" Name="VBoxGuestAdditions.iso"
                  Source="$(env.PATH_MULTIARCH_GUEST_ADDITIONS_ISO)\VBoxGuestAdditions.iso"
                  DiskId="$(var.Property_DiskIdCommon)" />
    <?else ?>
            <File Id="file_VBoxGuestAdditions.iso" Name="VBoxGuestAdditions.iso"
                  Source="$(env.PATH_OUT)\bin\additions\VBoxGuestAdditions.iso" />
    <?endif ?>
<?endif ?>
        <!-- Include key for VBox version -->
        <?include $(env.PATH_TARGET)\VBoxKey.wxi ?>

    </Component> <!-- MainBinaries -->

<?if $(env.VBOX_WITH_QTGUI) = "yes" ?>
    <!-- Qt accessible plugins -->
    <Directory Id="dir_VBoxAppAccessible" Name="accessible">
        <Component Id="cp_QtAccessible" Guid="12040EF9-D4A8-4FB2-A69C-CA2F5C354A45" Win64="$(var.Property_Win64)">
            <File Id="file_qtaccessiblewidgets4.dll" Name="qtaccessiblewidgets4.dll"
                  Source="$(env.PATH_OUT)\bin\accessible\qtaccessiblewidgets4.dll" />
        </Component>
    </Directory>
<?endif?>

<?if $(env.VBOX_WITH_CROGL) = "yes" ?>
    <Component Id="cp_VBoxCROpenGL" Guid="874A1297-835A-491D-8A9D-7E723BC29EE7" Win64="$(var.Property_Win64)">
        <File Id="file_VBoxOGLhostcrutil.dll" Name="VBoxOGLhostcrutil.dll"
              Source="$(env.PATH_OUT)\bin\VBoxOGLhostcrutil.dll" />
        <File Id="file_VBoxOGLhosterrorspu.dll" Name="VBoxOGLhosterrorspu.dll"
              Source="$(env.PATH_OUT)\bin\VBoxOGLhosterrorspu.dll" />
        <File Id="file_VBoxOGLrenderspu.dll" Name="VBoxOGLrenderspu.dll"
              Source="$(env.PATH_OUT)\bin\VBoxOGLrenderspu.dll" />
        <File Id="file_VBoxSharedCrOpenGL.dll" Name="VBoxSharedCrOpenGL.dll"
              Source="$(env.PATH_OUT)\bin\VBoxSharedCrOpenGL.dll" />
    </Component>
<?endif?>
    <!-- SDL plugins -->
    <Component Id="cp_VBoxSDLBinaries" Guid="F09D5FD9-E176-42B0-90A9-481BB18B0CB4"
               Win64="$(var.Property_Win64)">
        <File Id="file_VBoxSDL.exe" Name="VBoxSDL.exe"
              Source="$(env.PATH_OUT)\bin\VBoxSDL.exe" />
<?if $(env.VBOX_WITH_HARDENING) = "yes" ?>
        <File Id="file_VBoxSDL.dll" Name="VBoxSDL.dll"
              Source="$(env.PATH_OUT)\bin\VBoxSDL.dll">
        </File>
<?endif ?>
        <File Id="file_SDL.dll" Name="SDL.dll"
              Source="$(env.PATH_OUT)\bin\SDL.dll" />
<?if $(env.VBOX_WITH_SECURELABEL) = "yes" ?>
        <File Id="file_SDL_ttf.dll" Name="SDL_ttf.dll"
              Source="$(env.PATH_OUT)\bin\SDL_ttf.dll" />
<?endif?>
    </Component> <!-- SDL plugins -->

<?if $(env.VBOX_WITH_WEBSERVICES) = "yes" ?>
    <!-- Webservice -->
    <Component Id="cp_VBoxWebService" Guid="DD404F04-9874-43E9-AEE2-7762924D922E"
               Win64="$(var.Property_Win64)">
        <File Id="file_VBoxWebSrv.exe" Name="VBoxWebSrv.exe"
              Source="$(env.PATH_OUT)\bin\vboxwebsrv.exe" />
    </Component>
<?endif?>
    <!-- C API (glue) bindings -->
    <Component Id="cp_VBoxCAPI" Guid="097F7F53-7111-467F-8E0C-257D9926FDA0"
               Win64="$(var.Property_Win64)">
        <File Id="file_VBoxCAPI.dll" Name="VBoxCAPI.dll"
              Source="$(env.PATH_OUT)\bin\VBoxCAPI.dll" />
    </Component>

</Include>
